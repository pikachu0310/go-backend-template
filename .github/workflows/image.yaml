name: Build Docker Image

on:
  workflow_dispatch:
  push:
    branches:
      - main
    tags:
      - v*
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    env:
      CAN_PUSH: ${{ github.event_name != 'pull_request' && github.actor == github.repository_owner }}
    steps:
      - uses: actions/checkout@v4
      - name: Generate Image Tags
        uses: docker/metadata-action@v5
        id: meta
        with:
          images: ghcr.io/${{ github.repository }}
      - name: Login to GitHub Container Registry
        if: env.CAN_PUSH
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: ${{ env.CAN_PUSH }}
          platforms: linux/amd64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name != 'pull_request'
    permissions:
      contents: write
    steps:
      - name: Check if deploy branch exists
        run: git ls-remote --exit-code origin refs/heads/deploy
        continue-on-error: true
      - uses: actions/checkout@v4
        if: success()
        with:
          ref: deploy
      - name: Push empty commit
        if: success()
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git commit --allow-empty -m "Trigger deploy: ${{ github.ref }}"
          git push origin HEAD:deploy
        env:
          GITHUB_TOKEN: ${{ github.token }}
